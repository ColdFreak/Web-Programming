chef-solo is an open source version of the chef-clien that allows using
cookbooks with nodes without requiring access to a Chef server. chef-solo 
runs locally and requires that a cookbook be on the same physical disk as 
the node. chef-solo is a limited-functionality version of the chef-client.

A run-list is:
    An ordered list of roles and/or recipes that are run in an exact order.
    If a recipe appears more than once in the run-list, the chef-client will never run that recipe twice


Attribute types
    default:
        A default attribute is automatically reset at the start of every 
        chef-client run and has the lowest attribute precedence. A cookbook
        shoud be authored to use 'default' attributes as often as possible

Roles:
    A role is defined using JSON or the Ruby DSL, chef-solo will look for 
    roles in /var/chef/roles, but this location can be modified by changing
    the setting for 'role_path' in solo.rb like 
    role_path "/var/chef-solo/roles"

chef-repo
    The chef-repo is the location in which following data objects are stored
    1. Cookbooks
    2. Roles
    3. Data bags
    4. Environments
    5. Configuration files

.chef/
    The .chef/ directory is a hidden directory that is used to store .pem 
    validation that are provided by the Chef server and a knife.rb file.
    These files are required for interaction with a Chef server.

The syntax for using the 'execute' resource in a recipe is as follows:
execute "name" do
    attribute "value"
    ...
    action :action
end
● 'execute' tells the chef-client to use the Chef::Provider::Execute provider during the chef-client run


Every organization begins with a single environment called the '_default' 
environment, which cannot be modified(or deleted), Additional environments can be created to reflect each organization's patterns and workflow. For example, creating 'production', 'staging', 'testing', and 'development' environments.

An attribute can be defined in an environment and then used to override the default settings on a node. 
